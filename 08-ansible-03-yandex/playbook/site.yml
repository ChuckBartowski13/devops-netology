---
- name: Clickhouse
  hosts: clickhouse
  tags: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
      listen: "restart services"

  tasks:
    - name: Clickhouse/Getting of Clickhouse distrib
      block:
        - name: Clickhouse/get distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0444"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Clickhouse/get distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0444"

    - name: Clickhouse/install packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm

    - name: Clickhouse/change config
      become: true
      ansible.builtin.replace:
        path: /etc/clickhouse-server/config.xml
        regexp: '^    <!-- <listen_host>0.0.0.0</listen_host> -->$'
        replace: '<listen_host>0.0.0.0</listen_host>'
      notify: Start clickhouse service

    - name: Clickhouse/flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clickhouse/wait server
      ansible.builtin.wait_for:
        port: 9000
        delay: 5

    - name: Clickhouse/create database
      ansible.builtin.command: "clickhouse-client -h 0.0.0.0 -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Nginx
  hosts: lighthouse
  become: true
  tags: nginx

  handlers:
    - name: Start_nginx
      ansible.builtin.command: nginx
      register: my_output
      changed_when: my_output.rc != 0

  pre_tasks:
    - name: Nginx/install repo
      ansible.builtin.yum:
        name:
          - epel-release
        state: present

  tasks:
    - name: Nginx/install nginx
      ansible.builtin.yum:
        name:
          - nginx
        state: present

    - name: Nginx/create config nginx
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"
      notify: Start_nginx

- name: Lighhouse
  hosts: lighthouse
  tags: lighthouse
  handlers:
    - name: Reload_nginx
      become: true
      ansible.builtin.command: nginx -s reload
      register: my_output
      changed_when: my_output.rc != 0

  pre_tasks:
    - name: Lighhouse/install git
      become: true
      ansible.builtin.yum:
        name: git
        state: present

  tasks:
    - name: Lighhouse/download distrib
      become: true
      ansible.builtin.git:
        repo: "{{ lighthouse_vcs }}"
        dest: "{{ lighthouse_location_dir }}"
        version: master

    - name: Lighhouse/config
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: "0644"
      notify: Reload_nginx

- name: Vector
  hosts: vector
  tags: vector
  tasks:
    - name: Vector/Install package
      become: true
      ansible.builtin.yum:
        name: "{{ vector_url }}"
        state: present

    - name: Vector/Template config
      ansible.builtin.template:
        src: vector.yml.j2
        dest: vector.yml
        mode: "644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --no-environment --config-yaml %s

    - name: Vector/Create systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: "644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Vector | Start service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true
